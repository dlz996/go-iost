// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/iost-official/go-iost/rpc/pb (interfaces: ApiServiceServer)

// Package main is a generated GoMock package.
package main

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	pb "github.com/iost-official/go-iost/rpc/pb"
	reflect "reflect"
)

// MockApiServiceServer is a mock of ApiServiceServer interface
type MockApiServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockApiServiceServerMockRecorder
}

// MockApiServiceServerMockRecorder is the mock recorder for MockApiServiceServer
type MockApiServiceServerMockRecorder struct {
	mock *MockApiServiceServer
}

// NewMockApiServiceServer creates a new mock instance
func NewMockApiServiceServer(ctrl *gomock.Controller) *MockApiServiceServer {
	mock := &MockApiServiceServer{ctrl: ctrl}
	mock.recorder = &MockApiServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockApiServiceServer) EXPECT() *MockApiServiceServerMockRecorder {
	return m.recorder
}

// ExecTransaction mocks base method
func (m *MockApiServiceServer) ExecTransaction(arg0 context.Context, arg1 *pb.TransactionRequest) (*pb.TxReceipt, error) {
	ret := m.ctrl.Call(m, "ExecTransaction", arg0, arg1)
	ret0, _ := ret[0].(*pb.TxReceipt)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExecTransaction indicates an expected call of ExecTransaction
func (mr *MockApiServiceServerMockRecorder) ExecTransaction(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecTransaction", reflect.TypeOf((*MockApiServiceServer)(nil).ExecTransaction), arg0, arg1)
}

// GetAccount mocks base method
func (m *MockApiServiceServer) GetAccount(arg0 context.Context, arg1 *pb.GetAccountRequest) (*pb.Account, error) {
	ret := m.ctrl.Call(m, "GetAccount", arg0, arg1)
	ret0, _ := ret[0].(*pb.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccount indicates an expected call of GetAccount
func (mr *MockApiServiceServerMockRecorder) GetAccount(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccount", reflect.TypeOf((*MockApiServiceServer)(nil).GetAccount), arg0, arg1)
}

// GetBlockByHash mocks base method
func (m *MockApiServiceServer) GetBlockByHash(arg0 context.Context, arg1 *pb.GetBlockByHashRequest) (*pb.BlockResponse, error) {
	ret := m.ctrl.Call(m, "GetBlockByHash", arg0, arg1)
	ret0, _ := ret[0].(*pb.BlockResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockByHash indicates an expected call of GetBlockByHash
func (mr *MockApiServiceServerMockRecorder) GetBlockByHash(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockByHash", reflect.TypeOf((*MockApiServiceServer)(nil).GetBlockByHash), arg0, arg1)
}

// GetBlockByNumber mocks base method
func (m *MockApiServiceServer) GetBlockByNumber(arg0 context.Context, arg1 *pb.GetBlockByNumberRequest) (*pb.BlockResponse, error) {
	ret := m.ctrl.Call(m, "GetBlockByNumber", arg0, arg1)
	ret0, _ := ret[0].(*pb.BlockResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockByNumber indicates an expected call of GetBlockByNumber
func (mr *MockApiServiceServerMockRecorder) GetBlockByNumber(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockByNumber", reflect.TypeOf((*MockApiServiceServer)(nil).GetBlockByNumber), arg0, arg1)
}

// GetChainInfo mocks base method
func (m *MockApiServiceServer) GetChainInfo(arg0 context.Context, arg1 *pb.EmptyRequest) (*pb.ChainInfoResponse, error) {
	ret := m.ctrl.Call(m, "GetChainInfo", arg0, arg1)
	ret0, _ := ret[0].(*pb.ChainInfoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChainInfo indicates an expected call of GetChainInfo
func (mr *MockApiServiceServerMockRecorder) GetChainInfo(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChainInfo", reflect.TypeOf((*MockApiServiceServer)(nil).GetChainInfo), arg0, arg1)
}

// GetContract mocks base method
func (m *MockApiServiceServer) GetContract(arg0 context.Context, arg1 *pb.GetContractRequest) (*pb.Contract, error) {
	ret := m.ctrl.Call(m, "GetContract", arg0, arg1)
	ret0, _ := ret[0].(*pb.Contract)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContract indicates an expected call of GetContract
func (mr *MockApiServiceServerMockRecorder) GetContract(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContract", reflect.TypeOf((*MockApiServiceServer)(nil).GetContract), arg0, arg1)
}

// GetContractStorage mocks base method
func (m *MockApiServiceServer) GetContractStorage(arg0 context.Context, arg1 *pb.GetContractStorageRequest) (*pb.GetContractStorageResponse, error) {
	ret := m.ctrl.Call(m, "GetContractStorage", arg0, arg1)
	ret0, _ := ret[0].(*pb.GetContractStorageResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContractStorage indicates an expected call of GetContractStorage
func (mr *MockApiServiceServerMockRecorder) GetContractStorage(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContractStorage", reflect.TypeOf((*MockApiServiceServer)(nil).GetContractStorage), arg0, arg1)
}

// GetNodeInfo mocks base method
func (m *MockApiServiceServer) GetNodeInfo(arg0 context.Context, arg1 *pb.EmptyRequest) (*pb.NodeInfoResponse, error) {
	ret := m.ctrl.Call(m, "GetNodeInfo", arg0, arg1)
	ret0, _ := ret[0].(*pb.NodeInfoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNodeInfo indicates an expected call of GetNodeInfo
func (mr *MockApiServiceServerMockRecorder) GetNodeInfo(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodeInfo", reflect.TypeOf((*MockApiServiceServer)(nil).GetNodeInfo), arg0, arg1)
}

// GetTokenBalance mocks base method
func (m *MockApiServiceServer) GetTokenBalance(arg0 context.Context, arg1 *pb.GetTokenBalanceRequest) (*pb.GetTokenBalanceResponse, error) {
	ret := m.ctrl.Call(m, "GetTokenBalance", arg0, arg1)
	ret0, _ := ret[0].(*pb.GetTokenBalanceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokenBalance indicates an expected call of GetTokenBalance
func (mr *MockApiServiceServerMockRecorder) GetTokenBalance(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenBalance", reflect.TypeOf((*MockApiServiceServer)(nil).GetTokenBalance), arg0, arg1)
}

// GetTxByHash mocks base method
func (m *MockApiServiceServer) GetTxByHash(arg0 context.Context, arg1 *pb.TxHashRequest) (*pb.TransactionResponse, error) {
	ret := m.ctrl.Call(m, "GetTxByHash", arg0, arg1)
	ret0, _ := ret[0].(*pb.TransactionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTxByHash indicates an expected call of GetTxByHash
func (mr *MockApiServiceServerMockRecorder) GetTxByHash(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTxByHash", reflect.TypeOf((*MockApiServiceServer)(nil).GetTxByHash), arg0, arg1)
}

// GetTxReceiptByTxHash mocks base method
func (m *MockApiServiceServer) GetTxReceiptByTxHash(arg0 context.Context, arg1 *pb.TxHashRequest) (*pb.TxReceipt, error) {
	ret := m.ctrl.Call(m, "GetTxReceiptByTxHash", arg0, arg1)
	ret0, _ := ret[0].(*pb.TxReceipt)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTxReceiptByTxHash indicates an expected call of GetTxReceiptByTxHash
func (mr *MockApiServiceServerMockRecorder) GetTxReceiptByTxHash(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTxReceiptByTxHash", reflect.TypeOf((*MockApiServiceServer)(nil).GetTxReceiptByTxHash), arg0, arg1)
}

// SendTransaction mocks base method
func (m *MockApiServiceServer) SendTransaction(arg0 context.Context, arg1 *pb.TransactionRequest) (*pb.SendTransactionResponse, error) {
	ret := m.ctrl.Call(m, "SendTransaction", arg0, arg1)
	ret0, _ := ret[0].(*pb.SendTransactionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendTransaction indicates an expected call of SendTransaction
func (mr *MockApiServiceServerMockRecorder) SendTransaction(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendTransaction", reflect.TypeOf((*MockApiServiceServer)(nil).SendTransaction), arg0, arg1)
}
